/*参考：https://404background.com/circuit/mcp2561-can/
 * 
 * 受信と通信、両者を可能にしたコードである！
関数の役割と引数・返り値
setupReceiver(): 受信側の初期設定を行います。引数も返り値もありません。受信初期化メッセージを表示します。
setupSender(): 送信側の初期設定を行います。引数も返り値もありません。送信初期化メッセージを表示します。
sendPacket(): CANバスでメッセージを送信します。引数も返り値もありません。2種類のパケット（通常と拡張）を送信し、それぞれ完了したメッセージを表示します。
receivePacket(): CANバスからメッセージを受信し、受信内容をシリアルに表示します。引数も返り値もありません。受信したパケットの種類やデータを表示します。
2. 定数と変数
CAN.begin(500E3): 500kbpsでCANバスを初期化するための定数設定（通信速度）。
packetSize: receivePacket()内で受信したパケットのサイズを格納する変数です。受信したデータの長さを示します。
CAN.packetId(): 受信したパケットのIDを取得する関数。受信パケットに関連付けられたIDを取得します。
3. エラー対応
CANバスの初期化エラー: if (!CAN.begin(500E3))で初期化に失敗した場合、エラーメッセージをシリアルに出力し、while (1)でプログラムを停止します。この場所でエラー処理が行われています。

cpp
if (!CAN.begin(500E3)) {
  Serial.println("CANの初期化に失敗しました！");
  while (1);  // 永久ループで停止
}
受信エラー: receivePacket()関数内で、CAN.parsePacket()で受信できたパケットがあった場合のみ処理を実行します。受信失敗（パケットがない場合）には何も表示されませんが、パケットの内容に問題があった場合にはその情報をシリアルで表示します。
*/
